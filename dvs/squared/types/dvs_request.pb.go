// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dvs/squared/dvs_request.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// RequestNumberSquaredIn defines task request from task-dispatcher
type RequestNumberSquaredIn struct {
	Task *TaskRequest `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (m *RequestNumberSquaredIn) Reset()         { *m = RequestNumberSquaredIn{} }
func (m *RequestNumberSquaredIn) String() string { return proto.CompactTextString(m) }
func (*RequestNumberSquaredIn) ProtoMessage()    {}
func (*RequestNumberSquaredIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b554d4bfe172fdf, []int{0}
}
func (m *RequestNumberSquaredIn) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestNumberSquaredIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestNumberSquaredIn.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestNumberSquaredIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestNumberSquaredIn.Merge(m, src)
}
func (m *RequestNumberSquaredIn) XXX_Size() int {
	return m.Size()
}
func (m *RequestNumberSquaredIn) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestNumberSquaredIn.DiscardUnknown(m)
}

var xxx_messageInfo_RequestNumberSquaredIn proto.InternalMessageInfo

func (m *RequestNumberSquaredIn) GetTask() *TaskRequest {
	if m != nil {
		return m.Task
	}
	return nil
}

// RequestPriceFeedOut
type RequestNumberSquaredOut struct {
	TaskIndex uint32 `protobuf:"varint,1,opt,name=task_index,json=taskIndex,proto3" json:"task_index,omitempty"`
	// Aggregated final price
	Squared cosmossdk_io_math.Int `protobuf:"bytes,3,opt,name=squared,proto3,customtype=cosmossdk.io/math.Int" json:"squared"`
}

func (m *RequestNumberSquaredOut) Reset()         { *m = RequestNumberSquaredOut{} }
func (m *RequestNumberSquaredOut) String() string { return proto.CompactTextString(m) }
func (*RequestNumberSquaredOut) ProtoMessage()    {}
func (*RequestNumberSquaredOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b554d4bfe172fdf, []int{1}
}
func (m *RequestNumberSquaredOut) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestNumberSquaredOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestNumberSquaredOut.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestNumberSquaredOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestNumberSquaredOut.Merge(m, src)
}
func (m *RequestNumberSquaredOut) XXX_Size() int {
	return m.Size()
}
func (m *RequestNumberSquaredOut) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestNumberSquaredOut.DiscardUnknown(m)
}

var xxx_messageInfo_RequestNumberSquaredOut proto.InternalMessageInfo

func (m *RequestNumberSquaredOut) GetTaskIndex() uint32 {
	if m != nil {
		return m.TaskIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestNumberSquaredIn)(nil), "dvs.squared.RequestNumberSquaredIn")
	proto.RegisterType((*RequestNumberSquaredOut)(nil), "dvs.squared.RequestNumberSquaredOut")
}

func init() { proto.RegisterFile("dvs/squared/dvs_request.proto", fileDescriptor_5b554d4bfe172fdf) }

var fileDescriptor_5b554d4bfe172fdf = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0x29, 0x2b, 0xd6,
	0x2f, 0x2e, 0x2c, 0x4d, 0x2c, 0x4a, 0x4d, 0xd1, 0x4f, 0x29, 0x2b, 0x8e, 0x2f, 0x4a, 0x2d, 0x2c,
	0x4d, 0x2d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x29, 0x2b, 0xd6, 0x83,
	0x4a, 0x4b, 0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x83, 0xc5, 0xf5, 0x41, 0x2c, 0x88, 0x12, 0x29, 0xf1,
	0xe4, 0xfc, 0xe2, 0xdc, 0xfc, 0x62, 0xfd, 0xdc, 0xe2, 0x74, 0xfd, 0x32, 0x43, 0x10, 0x05, 0x95,
	0x90, 0x84, 0x48, 0xc4, 0x43, 0x74, 0x40, 0x38, 0x50, 0x29, 0xc1, 0xc4, 0xdc, 0xcc, 0xbc, 0x7c,
	0x7d, 0x30, 0x09, 0x15, 0x12, 0x43, 0x76, 0x48, 0x49, 0x62, 0x71, 0x36, 0x44, 0x5c, 0xa9, 0x8d,
	0x91, 0x4b, 0x2c, 0x08, 0xe2, 0x26, 0xbf, 0xd2, 0xdc, 0xa4, 0xd4, 0xa2, 0x60, 0x88, 0x1a, 0xcf,
	0x3c, 0x21, 0x1d, 0x2e, 0x16, 0x90, 0x42, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x09, 0x3d,
	0x24, 0xb7, 0xea, 0x85, 0x24, 0x16, 0x67, 0x43, 0xb5, 0x05, 0x81, 0x55, 0x59, 0xd9, 0x9d, 0xda,
	0xa2, 0x0b, 0x75, 0xab, 0x5e, 0x52, 0x62, 0x71, 0xaa, 0x5e, 0x99, 0x61, 0x52, 0x6a, 0x49, 0xa2,
	0xa1, 0x9e, 0x6f, 0x71, 0x7a, 0xd7, 0xf3, 0x0d, 0x5a, 0x72, 0xc8, 0x0e, 0x28, 0x28, 0xca, 0x4f,
	0x4e, 0x2d, 0x06, 0xb9, 0x3d, 0x33, 0x39, 0x35, 0x3e, 0x2d, 0x35, 0x35, 0x45, 0xa9, 0x8f, 0x91,
	0x4b, 0x1c, 0x9b, 0x43, 0xfc, 0x4b, 0x4b, 0x84, 0x64, 0xb9, 0xb8, 0x40, 0x76, 0xc4, 0x67, 0xe6,
	0xa5, 0xa4, 0x56, 0x80, 0xdd, 0xc3, 0x1b, 0xc4, 0x09, 0x12, 0xf1, 0x04, 0x09, 0x08, 0x99, 0x73,
	0xb1, 0x43, 0x0d, 0x96, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x74, 0x92, 0x3d, 0x71, 0x4f, 0x9e, 0xe1,
	0xd6, 0x3d, 0x79, 0x51, 0x88, 0x7b, 0x8a, 0x53, 0xb2, 0xf5, 0x32, 0xf3, 0xf5, 0x73, 0x13, 0x4b,
	0x32, 0xf4, 0x3c, 0xf3, 0x4a, 0x82, 0x60, 0xaa, 0xad, 0xa4, 0xf1, 0xb8, 0xd9, 0xa8, 0x90, 0x8b,
	0xcb, 0x25, 0x2c, 0x18, 0xea, 0x24, 0xa1, 0x64, 0x2e, 0x11, 0x6c, 0xae, 0x13, 0x52, 0x46, 0x09,
	0x16, 0xec, 0x21, 0x29, 0xa5, 0x42, 0x50, 0x91, 0x7f, 0x69, 0x89, 0x12, 0x83, 0x93, 0xf6, 0x89,
	0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3,
	0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0x09, 0xa2, 0x44, 0x5f, 0x65, 0x41, 0x6a,
	0x71, 0x12, 0x1b, 0x38, 0x02, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x87, 0xc6, 0x7f,
	0x63, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DVSRequestClient is the client API for DVSRequest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DVSRequestClient interface {
	RequestNumberSquared(ctx context.Context, in *RequestNumberSquaredIn, opts ...grpc.CallOption) (*RequestNumberSquaredOut, error)
}

type dVSRequestClient struct {
	cc grpc1.ClientConn
}

func NewDVSRequestClient(cc grpc1.ClientConn) DVSRequestClient {
	return &dVSRequestClient{cc}
}

func (c *dVSRequestClient) RequestNumberSquared(ctx context.Context, in *RequestNumberSquaredIn, opts ...grpc.CallOption) (*RequestNumberSquaredOut, error) {
	out := new(RequestNumberSquaredOut)
	err := c.cc.Invoke(ctx, "/dvs.squared.DVSRequest/RequestNumberSquared", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DVSRequestServer is the server API for DVSRequest service.
type DVSRequestServer interface {
	RequestNumberSquared(context.Context, *RequestNumberSquaredIn) (*RequestNumberSquaredOut, error)
}

// UnimplementedDVSRequestServer can be embedded to have forward compatible implementations.
type UnimplementedDVSRequestServer struct {
}

func (*UnimplementedDVSRequestServer) RequestNumberSquared(ctx context.Context, req *RequestNumberSquaredIn) (*RequestNumberSquaredOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestNumberSquared not implemented")
}

func RegisterDVSRequestServer(s grpc1.Server, srv DVSRequestServer) {
	s.RegisterService(&_DVSRequest_serviceDesc, srv)
}

func _DVSRequest_RequestNumberSquared_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestNumberSquaredIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DVSRequestServer).RequestNumberSquared(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dvs.squared.DVSRequest/RequestNumberSquared",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DVSRequestServer).RequestNumberSquared(ctx, req.(*RequestNumberSquaredIn))
	}
	return interceptor(ctx, in, info, handler)
}

var DVSRequest_serviceDesc = _DVSRequest_serviceDesc
var _DVSRequest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dvs.squared.DVSRequest",
	HandlerType: (*DVSRequestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestNumberSquared",
			Handler:    _DVSRequest_RequestNumberSquared_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dvs/squared/dvs_request.proto",
}

func (m *RequestNumberSquaredIn) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestNumberSquaredIn) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestNumberSquaredIn) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Task != nil {
		{
			size, err := m.Task.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDvsRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RequestNumberSquaredOut) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestNumberSquaredOut) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestNumberSquaredOut) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Squared.Size()
		i -= size
		if _, err := m.Squared.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintDvsRequest(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.TaskIndex != 0 {
		i = encodeVarintDvsRequest(dAtA, i, uint64(m.TaskIndex))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDvsRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovDvsRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RequestNumberSquaredIn) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Task != nil {
		l = m.Task.Size()
		n += 1 + l + sovDvsRequest(uint64(l))
	}
	return n
}

func (m *RequestNumberSquaredOut) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TaskIndex != 0 {
		n += 1 + sovDvsRequest(uint64(m.TaskIndex))
	}
	l = m.Squared.Size()
	n += 1 + l + sovDvsRequest(uint64(l))
	return n
}

func sovDvsRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDvsRequest(x uint64) (n int) {
	return sovDvsRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RequestNumberSquaredIn) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDvsRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestNumberSquaredIn: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestNumberSquaredIn: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Task", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvsRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDvsRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDvsRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Task == nil {
				m.Task = &TaskRequest{}
			}
			if err := m.Task.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDvsRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDvsRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestNumberSquaredOut) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDvsRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestNumberSquaredOut: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestNumberSquaredOut: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskIndex", wireType)
			}
			m.TaskIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvsRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TaskIndex |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Squared", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDvsRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDvsRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDvsRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Squared.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDvsRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDvsRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDvsRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDvsRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDvsRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDvsRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDvsRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDvsRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDvsRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDvsRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDvsRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDvsRequest = fmt.Errorf("proto: unexpected end of group")
)
