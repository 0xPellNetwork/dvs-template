// proto/dvs/query/service.proto
syntax = "proto3";
package dvs.squared;

import "cosmos_proto/cosmos.proto";
import "dvs/squared/task.proto";
import "google/api/annotations.proto";

option go_package = "dvs/squared/types";

// QueryService provides data query functionality
service Query {
  // Task retrieves data for a given key
  rpc Task(QueryTaskRequest) returns (QueryTaskResponse) {
    option (google.api.http) = {get: "/dvs/squared/v1/tasks/{task_index}"};
  }

  // Tasks lists all data with a list of task indexs like 1,2,3,4,
  rpc Tasks(QueryTasksRequest) returns (QueryTasksResponse) {
    option (google.api.http) = {get: "/dvs/squared/v1/tasks"};
  }
}

// QueryTaskRequest is the request for getting data
message QueryTaskRequest {
  option (cosmos_proto.implements_interface) = "cosmos.base.v1beta1.Msg";
  string task_index = 1;
}

// QueryTaskResponse is the response for getting data
message QueryTaskResponse {
  TaskResult value = 1;
}

// QueryTasksRequest is the request for listing data
message QueryTasksRequest {
  option (cosmos_proto.implements_interface) = "cosmos.base.v1beta1.Msg";
  string task_indexes = 1;
  int32 limit = 2; // optional limit for the number of items to return
}

// QueryTasksResponse is the response for listing data
message QueryTasksResponse {
  repeated TaskResult items = 1;
}
