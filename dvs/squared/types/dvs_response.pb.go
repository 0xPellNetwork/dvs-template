// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dvs/squared/dvs_response.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResponseNumberSquaredOut struct {
}

func (m *ResponseNumberSquaredOut) Reset()         { *m = ResponseNumberSquaredOut{} }
func (m *ResponseNumberSquaredOut) String() string { return proto.CompactTextString(m) }
func (*ResponseNumberSquaredOut) ProtoMessage()    {}
func (*ResponseNumberSquaredOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_434b5e0a1df0fd48, []int{0}
}
func (m *ResponseNumberSquaredOut) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResponseNumberSquaredOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResponseNumberSquaredOut.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResponseNumberSquaredOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseNumberSquaredOut.Merge(m, src)
}
func (m *ResponseNumberSquaredOut) XXX_Size() int {
	return m.Size()
}
func (m *ResponseNumberSquaredOut) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseNumberSquaredOut.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseNumberSquaredOut proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ResponseNumberSquaredOut)(nil), "dvs.squared.ResponseNumberSquaredOut")
}

func init() { proto.RegisterFile("dvs/squared/dvs_response.proto", fileDescriptor_434b5e0a1df0fd48) }

var fileDescriptor_434b5e0a1df0fd48 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0x29, 0x2b, 0xd6,
	0x2f, 0x2e, 0x2c, 0x4d, 0x2c, 0x4a, 0x4d, 0xd1, 0x4f, 0x29, 0x2b, 0x8e, 0x2f, 0x4a, 0x2d, 0x2e,
	0xc8, 0xcf, 0x2b, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x29, 0x2b, 0xd6,
	0x83, 0xca, 0x4b, 0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x83, 0xc5, 0xf5, 0x41, 0x2c, 0x88, 0x12, 0x29,
	0x59, 0x4c, 0x23, 0x0a, 0x4b, 0x53, 0x8b, 0x4b, 0xa0, 0xd2, 0xe2, 0xc9, 0xf9, 0xc5, 0xb9, 0xf9,
	0xc5, 0xfa, 0xb9, 0xc5, 0xe9, 0xfa, 0x65, 0x86, 0x20, 0x0a, 0x2a, 0x21, 0x09, 0x91, 0x88, 0x87,
	0x18, 0x08, 0xe1, 0x40, 0xa5, 0x04, 0x13, 0x73, 0x33, 0xf3, 0xf2, 0xf5, 0xc1, 0x24, 0x44, 0x48,
	0x49, 0x8a, 0x4b, 0x22, 0x08, 0xea, 0x34, 0xbf, 0xd2, 0xdc, 0xa4, 0xd4, 0xa2, 0x60, 0x88, 0x8d,
	0xfe, 0xa5, 0x25, 0x46, 0x25, 0x5c, 0xdc, 0x2e, 0x61, 0xc1, 0x30, 0x69, 0xa1, 0x54, 0x2e, 0x51,
	0xac, 0x4a, 0x85, 0x94, 0xf5, 0x90, 0x7c, 0xa3, 0x17, 0x04, 0x71, 0x26, 0x8a, 0x12, 0xcf, 0x3c,
	0x29, 0x55, 0x34, 0x45, 0xd8, 0xed, 0x54, 0x62, 0x70, 0xd2, 0x3e, 0xf1, 0x48, 0x8e, 0xf1, 0xc2,
	0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1,
	0xc6, 0x63, 0x39, 0x86, 0x28, 0x41, 0xe4, 0x10, 0x29, 0xa9, 0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03,
	0xfb, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xae, 0x08, 0x44, 0x70, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DVSResponseClient is the client API for DVSResponse service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DVSResponseClient interface {
	// ResponseNumberSquared defines avsi logic processing
	ResponseNumberSquared(ctx context.Context, in *RequestNumberSquaredIn, opts ...grpc.CallOption) (*ResponseNumberSquaredOut, error)
}

type dVSResponseClient struct {
	cc grpc1.ClientConn
}

func NewDVSResponseClient(cc grpc1.ClientConn) DVSResponseClient {
	return &dVSResponseClient{cc}
}

func (c *dVSResponseClient) ResponseNumberSquared(ctx context.Context, in *RequestNumberSquaredIn, opts ...grpc.CallOption) (*ResponseNumberSquaredOut, error) {
	out := new(ResponseNumberSquaredOut)
	err := c.cc.Invoke(ctx, "/dvs.squared.DVSResponse/ResponseNumberSquared", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DVSResponseServer is the server API for DVSResponse service.
type DVSResponseServer interface {
	// ResponseNumberSquared defines avsi logic processing
	ResponseNumberSquared(context.Context, *RequestNumberSquaredIn) (*ResponseNumberSquaredOut, error)
}

// UnimplementedDVSResponseServer can be embedded to have forward compatible implementations.
type UnimplementedDVSResponseServer struct {
}

func (*UnimplementedDVSResponseServer) ResponseNumberSquared(ctx context.Context, req *RequestNumberSquaredIn) (*ResponseNumberSquaredOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResponseNumberSquared not implemented")
}

func RegisterDVSResponseServer(s grpc1.Server, srv DVSResponseServer) {
	s.RegisterService(&_DVSResponse_serviceDesc, srv)
}

func _DVSResponse_ResponseNumberSquared_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestNumberSquaredIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DVSResponseServer).ResponseNumberSquared(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dvs.squared.DVSResponse/ResponseNumberSquared",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DVSResponseServer).ResponseNumberSquared(ctx, req.(*RequestNumberSquaredIn))
	}
	return interceptor(ctx, in, info, handler)
}

var DVSResponse_serviceDesc = _DVSResponse_serviceDesc
var _DVSResponse_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dvs.squared.DVSResponse",
	HandlerType: (*DVSResponseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ResponseNumberSquared",
			Handler:    _DVSResponse_ResponseNumberSquared_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dvs/squared/dvs_response.proto",
}

func (m *ResponseNumberSquaredOut) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResponseNumberSquaredOut) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResponseNumberSquaredOut) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintDvsResponse(dAtA []byte, offset int, v uint64) int {
	offset -= sovDvsResponse(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ResponseNumberSquaredOut) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovDvsResponse(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDvsResponse(x uint64) (n int) {
	return sovDvsResponse(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ResponseNumberSquaredOut) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDvsResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResponseNumberSquaredOut: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResponseNumberSquaredOut: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDvsResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDvsResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDvsResponse(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDvsResponse
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDvsResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDvsResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDvsResponse
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDvsResponse
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDvsResponse
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDvsResponse        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDvsResponse          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDvsResponse = fmt.Errorf("proto: unexpected end of group")
)
