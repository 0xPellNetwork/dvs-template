// proto/dvs/query/service.proto
syntax = "proto3";
package dvs.query;

import "dvs/types/task.proto";
import "google/api/annotations.proto";

option go_package = "dvs/query/types";

// QueryService provides data query functionality
service QueryService {
  // GetData retrieves data for a given key
  rpc GetData(GetDataRequest) returns (GetDataResponse) {
    option (google.api.http) = {get: "/v1/item/{key}"};
  }

  // ListData lists all data with a list of keys like task-1,task-2,task-3,task-4
  rpc ListData(ListDataRequest) returns (ListDataResponse) {
    option (google.api.http) = {get: "/v1/list/{keys}"};
  }
}

// GetDataRequest is the request for getting data
message GetDataRequest {
  string key = 1;
  string result = 2;
  dvs.types.TaskRequest task = 3;
}

// GetDataResponse is the response for getting data
message GetDataResponse {
  dvs.types.TaskResult value = 1;
}

// ListDataRequest is the request for listing data
message ListDataRequest {
  string keys = 1;
  int32 limit = 2; // optional limit for the number of items to return
}

// ListDataResponse is the response for listing data
message ListDataResponse {
  repeated ListItem items = 1;
}

// KeyValue represents a key-value pair
message ListItem {
  string key = 1;
  dvs.types.TaskResult value = 2;
}
